[{"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\index.js":"1","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\App.js":"2","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\routes\\index.js":"3","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Login\\login.js":"4","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\history.js":"5","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Header\\header.js":"6","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Footer\\footer.js":"7","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Register\\register.js":"8","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\DocumentValidation\\documentValidation.js":"9","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\FileManager\\fileManager.js":"10","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Card\\card.js":"11","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Document\\document.js":"12","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\Historic\\historic.js":"13","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Profile\\profile.js":"14","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Dropdown\\dropdown.js":"15","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\AddFile\\addFile.js":"16","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\auth.js":"17","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\api.js":"18","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\localStorage.js":"19","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\user.js":"20","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\roles.js":"21","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\List\\list.js":"22","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Edit\\edit.js":"23","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Register\\register.js":"24","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\file.js":"25"},{"size":197,"mtime":1609811468218,"results":"26","hashOfConfig":"27"},{"size":455,"mtime":1609810426630,"results":"28","hashOfConfig":"27"},{"size":2640,"mtime":1610838909055,"results":"29","hashOfConfig":"27"},{"size":2367,"mtime":1610844439089,"results":"30","hashOfConfig":"27"},{"size":117,"mtime":1609804067538,"results":"31","hashOfConfig":"27"},{"size":1940,"mtime":1610835873343,"results":"32","hashOfConfig":"27"},{"size":262,"mtime":1609810195344,"results":"33","hashOfConfig":"27"},{"size":3230,"mtime":1610844336597,"results":"34","hashOfConfig":"27"},{"size":2864,"mtime":1610979303498,"results":"35","hashOfConfig":"27"},{"size":3495,"mtime":1610935880987,"results":"36","hashOfConfig":"27"},{"size":1830,"mtime":1610977624223,"results":"37","hashOfConfig":"27"},{"size":523,"mtime":1610935860999,"results":"38","hashOfConfig":"27"},{"size":1164,"mtime":1609940979621,"results":"39","hashOfConfig":"27"},{"size":3710,"mtime":1610935870263,"results":"40","hashOfConfig":"27"},{"size":1150,"mtime":1610835863991,"results":"41","hashOfConfig":"27"},{"size":3380,"mtime":1610925121679,"results":"42","hashOfConfig":"27"},{"size":904,"mtime":1610840674718,"results":"43","hashOfConfig":"27"},{"size":666,"mtime":1610935890890,"results":"44","hashOfConfig":"27"},{"size":1034,"mtime":1610833611398,"results":"45","hashOfConfig":"27"},{"size":1803,"mtime":1610842661624,"results":"46","hashOfConfig":"27"},{"size":466,"mtime":1610838902959,"results":"47","hashOfConfig":"27"},{"size":3535,"mtime":1610935901102,"results":"48","hashOfConfig":"27"},{"size":3253,"mtime":1610846258105,"results":"49","hashOfConfig":"27"},{"size":3007,"mtime":1610845950320,"results":"50","hashOfConfig":"27"},{"size":1560,"mtime":1610977223796,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ig7b3r",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\index.js",[],["111","112"],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\App.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\routes\\index.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Login\\login.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\history.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Header\\header.js",["113"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, notification } from 'antd';\r\nimport { ArrowRightOutlined, PaperClipOutlined } from '@ant-design/icons';\r\n\r\nimport Dropdown from '../Dropdown/dropdown';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom'\r\nimport history from '../../utils/history';\r\nimport localStorage from '../../services/localStorage';\r\nimport userService from '../../services/user';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = () => {\r\n    const [user, setUser] = useState(null)\r\n    const { pathname } = useLocation();\r\n\r\n    async function getUser(username) {\r\n        const response = await userService.get(username);\r\n        if (response.status === 200) setUser(response.data);\r\n        else {\r\n            notification['error']({\r\n                message: 'Usuário não autorizado',\r\n            });\r\n            localStorage.logout();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getUser()) {\r\n            getUser(localStorage.getUser().username);\r\n        }\r\n        else {\r\n            localStorage.logout();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"header-content padding-page\">\r\n            <Link className=\"brand\" to=\"/\">\r\n                <div className=\"brand\">\r\n                    <PaperClipOutlined />\r\n                    <p>ValiDC</p>\r\n                </div>\r\n            </Link>\r\n            {localStorage.getUser() ?\r\n                <Dropdown email={localStorage.getUser().email} id={localStorage.getUser().username} />\r\n                :\r\n                <div>\r\n                    {pathname !== '/document/validation' &&\r\n                        <Button type=\"link\" onClick={() => { history.push('/document/validation') }}>Validar arquivo <ArrowRightOutlined /></Button>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Footer\\footer.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Register\\register.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\DocumentValidation\\documentValidation.js",["114"],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\FileManager\\fileManager.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Card\\card.js",["115"],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Document\\document.js",["116"],"import React from 'react';\r\nimport './document.scss';\r\n\r\nconst Document = ({file, type}) => {\r\n    return (\r\n        <div className=\"document-container\">\r\n            <div className={`document-file ${type === 'application/pdf' ? 'typePdf' : ''}`} >\r\n                {type === 'application/pdf' ?\r\n                    <embed className=\"file\" src={file} width=\"100%\"></embed> :\r\n                    <img src={file} className=\"img\"/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Document;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\Historic\\historic.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Profile\\profile.js",["117"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, notification } from 'antd';\r\n\r\nimport userService from '../../services/user';\r\nimport localStorage from '../../services/localStorage';\r\nimport history from '../../utils/history';\r\n\r\nimport './profile.scss';\r\n\r\nconst Profile = () => {\r\n    const [form] = Form.useForm();\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState({});\r\n    const { username } = localStorage.getUser();\r\n\r\n    async function getUser() {\r\n        setDisabled(true);\r\n        const response = await userService.get(username);\r\n        const { data } = response;\r\n        if (response.status === 200) {\r\n            setUser(data);\r\n            form.setFieldsValue({ name: data.name, username: data.username, email: data.email });\r\n            setDisabled(false);\r\n        }\r\n        else {\r\n            notification['error']({\r\n                message: 'Usuário não autorizado',\r\n            });\r\n            localStorage.logout();\r\n        }\r\n    };\r\n\r\n    useEffect(() => { getUser(); }, [])\r\n\r\n    const onFinish = async (values) => {\r\n        setDisabled(true);\r\n        setLoading(true);\r\n        const response = await userService.put({\r\n            ...values,\r\n            externalId: user.externalId\r\n        });\r\n        const { data } = response;\r\n        if (response.status === 200) {\r\n            localStorage.update(data.email, data.username);\r\n            notification['success']({\r\n                message: 'Edição realizada com sucesso! Para continuar utilizando nosso sistema, por favor, realize login novamente',\r\n            });\r\n            localStorage.logout();\r\n        } else {\r\n            setDisabled(true);\r\n            setLoading(true);\r\n            notification['error']({\r\n                message: response.data.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container content-align-center form-container\">\r\n            <Form\r\n                form={form}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout={'vertical'}\r\n            >\r\n                <h1>Editar perfil</h1>\r\n                <Form.Item\r\n                    label=\"Nome\"\r\n                    name=\"name\"\r\n                    rules={[{ min: 7, message: 'Por favor digite um nome válido' }]}\r\n                >\r\n                    <Input disabled={disabled} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Nome de usuário\"\r\n                    name=\"username\"\r\n                >\r\n                    <Input disabled={disabled} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                >\r\n                    <Input disabled={disabled} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Senha\"\r\n                    name=\"password\"\r\n                >\r\n                    <Input.Password disabled={disabled} />\r\n                </Form.Item>\r\n\r\n                <div className=\"inline\">\r\n                    <Button type=\"link\" disabled={disabled} onClick={() => history.push(\"/\")} className='no-padding-left'>\r\n                        Cancelar\r\n                        </Button>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled} loading={loading}>\r\n                            Salvar\r\n        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Dropdown\\dropdown.js",["118","119"],"import React from 'react';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport localStorage from '../../services/localStorage';\r\n\r\nimport './dropdown.scss';\r\n\r\nconst DropdownComponent = ({ id, email }) => {\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item className=\"menu-info\">\r\n                {email}\r\n            </Menu.Item>\r\n            <Menu.Divider />\r\n            <Menu.Item>\r\n                <Link to=\"/edit/profile\">\r\n                    Editar perfil\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Divider />\r\n            <Menu.Item>\r\n                <a onClick={() => {localStorage.logout()}}>\r\n                    Sair\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <Dropdown overlay={menu}>\r\n            <a className=\"ant-dropdown-link dropdown-link\" onClick={e => e.preventDefault()}>\r\n                <span className=\"dropdown-id\">{id}</span><CaretDownOutlined />\r\n            </a>\r\n        </Dropdown>\r\n    )\r\n};\r\n\r\nexport default DropdownComponent;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\AddFile\\addFile.js",["120"],"import React, { useState } from 'react';\r\nimport { Form, Button, notification, Upload } from 'antd';\r\nimport { PaperClipOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport file from '../../../services/file';\r\nimport history from '../../../utils/history';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst AddFile = () => {\r\n    const [defaultFileList, setDefaultFileList] = useState([]);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const uploadFile = {\r\n        accept: '.png, .jpg, .jpeg, .pdf',\r\n        name: 'file',\r\n        multiple: false,\r\n        beforeUpload: file => {\r\n            let fileList = [file];\r\n            setDefaultFileList(fileList);\r\n            return false;\r\n        },\r\n        onRemove(file) {\r\n            setDefaultFileList([]);\r\n        }\r\n    };\r\n\r\n    const onFinish = async (values) => {\r\n        if (defaultFileList.length > 0) {\r\n            setDisabled(true);\r\n            setLoading(true);\r\n            const response = await file.upload(values.file.file);\r\n            if (response.status === 200) {\r\n                notification['success']({\r\n                    message: 'Arquivo enviado com sucesso!',\r\n                });\r\n                setDefaultFileList([]);\r\n                setDisabled(false);\r\n                setLoading(false);\r\n            } else {\r\n                notification['error']({\r\n                    message: response.data.message,\r\n                });\r\n                setDisabled(false);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            notification['error']({\r\n                message: 'Por favor, adicione um arquivo',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"document-content content-align-center form-container\">\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout={'vertical'}\r\n            >\r\n                <h1>Enviar arquivo</h1>\r\n\r\n                <Form.Item\r\n                    label=\"Arquivo\"\r\n                    name=\"file\"\r\n                    rules={[{ required: true, message: 'Por favor insira um arquivo' }]}\r\n                >\r\n                    <Dragger {...uploadFile} fileList={defaultFileList} disabled={disabled}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <PaperClipOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">Click ou arraste o arquivo para adicioná-lo</p>\r\n                        <p className=\"ant-upload-hint\">\r\n                            Você pode adicionar um arquivo .pdf, .png ou .jpeg\r\n                        </p>\r\n                    </Dragger>\r\n                </Form.Item>\r\n\r\n                <div className=\"inline\">\r\n                    <Button type=\"link\" disabled={disabled} onClick={() => history.goBack()} className='no-padding-left'>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled} loading={loading}>\r\n                            Enviar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFile;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\auth.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\api.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\localStorage.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\user.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\roles.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\List\\list.js",["121","122"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal, notification, Table, Space } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport history from '../../../utils/history';\r\n\r\nimport './list.scss';\r\nimport user from '../../../services/user';\r\n\r\nconst List = () => {\r\n    const { confirm } = Modal;\r\n\r\n    const [data, setData] = useState(null);\r\n    const [pagination, setPagination] = useState({\r\n        page: 0,\r\n        size: 10,\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function fetchData(page, size) {\r\n        setLoading(true);\r\n        const response = await user.list(page, size);\r\n        if (response.status === 200) {\r\n            setData(response.data);\r\n            setLoading(false);\r\n        } else {\r\n            setLoading(false);\r\n            notification['error']({\r\n                message: response.data.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => { fetchData(pagination.page, pagination.size) }, []);\r\n\r\n    const handleTableChange = (pagination, filters, sorter) => {\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nome de usuário',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email'\r\n        },\r\n        {\r\n            key: 'action',\r\n            render: (record) => (\r\n                <Space size=\"middle\">\r\n                    <Button shape=\"circle\" icon={<EditOutlined />} style={{ marginRight: '15px' }} onClick={() => history.push(\r\n                        {\r\n                            pathname: 'admin/user/edit',\r\n                            state: { user: record }\r\n                        })} />\r\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} onClick={() => showConfirm(record.externalId)} />\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    function showConfirm(externalId) {\r\n        confirm({\r\n            title: 'Você deseja deletar esse usuário?',\r\n            content: 'Deletando, você concorda que todas os dados do mesmo serão removidos',\r\n            async onOk() {\r\n                const response = await user.delete(externalId);\r\n                if (response.status === 200) {\r\n                    fetchData(pagination.page, pagination.size);\r\n                    notification['success']({\r\n                        message: 'Usuário deletado com sucesso',\r\n                    });\r\n                } else {\r\n                    notification['error']({\r\n                        message: response.data.message,\r\n                    });\r\n                }\r\n            },\r\n            okText: \"Deletar\",\r\n            cancelText: \"Cancelar\",\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='user-manager-container' >\r\n            <div className=\"page-header padding-page\">\r\n                <h2>Gerenciador de Usuários</h2>\r\n                <Button shape=\"circle\" icon={<PlusOutlined />} onClick={() => history.push('/admin/user/register')} />\r\n            </div>\r\n            <div className=\"table-container padding-page\">\r\n                <Table columns={columns} dataSource={data} loading={loading} pagination={pagination}\r\n                    onChange={handleTableChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default List;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Edit\\edit.js",["123","124"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, notification} from 'antd';\r\n\r\nimport history from '../../../utils/history';\r\nimport userService from '../../../services/user';\r\n\r\nconst Edit = () => {\r\n    const [form] = Form.useForm();\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = async (values) => {\r\n        setDisabled(true);\r\n        setLoading(true);\r\n        const response = await userService.edit({\r\n            ...values,\r\n            externalId: user.externalId\r\n        });\r\n        const { data } = response;\r\n        if (response.status === 200) {\r\n            notification['success']({\r\n                message: 'Edição realizada com sucesso!',\r\n            });\r\n            history.push(\"/admin\");\r\n        } else {\r\n            setDisabled(false);\r\n            setLoading(false);\r\n            notification['error']({\r\n                message: response.data.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (history.location.state.user) {\r\n            setUser(history.location.state.user);\r\n            let data = history.location.state.user;\r\n            form.setFieldsValue({ name: data.name, username: data.username, email: data.email })\r\n        } else {\r\n            history.push(\"/admin\");\r\n        };\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"user-registration-container content-align-center form-container\">\r\n            <Form\r\n                form={form}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout={'vertical'}\r\n            >\r\n                <h1>Editar usuário</h1>\r\n                <Form.Item\r\n                    label=\"Nome\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Por favor o nome' }, { min: 7, message: 'Por favor digite um nome válido' }]}\r\n                >\r\n                    <Input disabled={disabled} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Nome de usuário\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Por favor digite o nome de usuário' }]}\r\n                >\r\n                    <Input disabled={disabled} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'Por favor digite o email' }]}\r\n                >\r\n                    <Input disabled={disabled} />\r\n                </Form.Item>\r\n                <div className=\"inline\">\r\n                    <Button type=\"link\" disabled={disabled} onClick={() => history.push(\"/admin\")} className='no-padding-left'>\r\n                        Cancelar\r\n                    </Button>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled} loading={loading}>\r\n                            Enviar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Register\\register.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\file.js",["125"],"import { Upload } from 'antd';\r\nimport api from './api';\r\n\r\nconst file = {\r\n    async upload(asset) {\r\n        let formData = new FormData();\r\n        formData.append('file', asset);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            };\r\n\r\n            const response = await api.post('/file/upload', formData, config);\r\n            return response;\r\n        } catch (responseError) {\r\n            const { response } = responseError;\r\n            return response;\r\n        }\r\n    },\r\n\r\n    async get(fileName) {\r\n        try {\r\n            const response = await api.get(\r\n                `/file/download${fileName}`, {\r\n                Accept: 'application/pdf', responseType: 'arraybuffer'\r\n            });\r\n            return response;\r\n        } catch (responseError) {\r\n            const { response } = responseError;\r\n            return response;\r\n        }\r\n    },\r\n\r\n    async getFiles() {\r\n        try {\r\n            const response = await api.get(\"/file/list\");\r\n            return response;\r\n        } catch (responseError) {\r\n            const { response } = responseError;\r\n            return response;\r\n        }\r\n    },\r\n\r\n    async delete(fileName) {\r\n        try {\r\n            const response = await api.delete(`/file/delete${fileName}`);\r\n            return response;\r\n        } catch (responseError) {\r\n            const { response } = responseError;\r\n            return response;\r\n        }\r\n    }\r\n}\r\n\r\nexport default file",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":16,"column":12,"nodeType":"132","messageId":"133","endLine":16,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":11,"column":22,"nodeType":"132","messageId":"133","endLine":11,"endColumn":33},{"ruleId":"130","severity":1,"message":"135","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":10,"column":21,"nodeType":"138","endLine":10,"endColumn":54},{"ruleId":"139","severity":1,"message":"140","line":35,"column":37,"nodeType":"141","endLine":35,"endColumn":39,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":25,"column":17,"nodeType":"138","endLine":25,"endColumn":60},{"ruleId":"143","severity":1,"message":"144","line":34,"column":13,"nodeType":"138","endLine":34,"endColumn":94},{"ruleId":"130","severity":1,"message":"145","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":14},{"ruleId":"130","severity":1,"message":"146","line":13,"column":24,"nodeType":"132","messageId":"133","endLine":13,"endColumn":37},{"ruleId":"139","severity":1,"message":"147","line":33,"column":70,"nodeType":"141","endLine":33,"endColumn":72,"suggestions":"148"},{"ruleId":"130","severity":1,"message":"149","line":21,"column":17,"nodeType":"132","messageId":"133","endLine":21,"endColumn":21},{"ruleId":"139","severity":1,"message":"150","line":44,"column":8,"nodeType":"141","endLine":44,"endColumn":10,"suggestions":"151"},{"ruleId":"130","severity":1,"message":"152","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":16},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setDisabled' is assigned a value but never used.","'EditOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["155"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'setPagination' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pagination.page' and 'pagination.size'. Either include them or remove the dependency array.",["156"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["157"],"'Upload' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [getUser]",{"range":"164","text":"165"},"Update the dependencies array to be: [pagination.page, pagination.size]",{"range":"166","text":"167"},"Update the dependencies array to be: [form]",{"range":"168","text":"169"},[1138,1140],"[getUser]",[1049,1051],"[pagination.page, pagination.size]",[1430,1432],"[form]"]