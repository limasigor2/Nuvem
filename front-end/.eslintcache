[{"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\index.js":"1","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\App.js":"2","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\routes\\index.js":"3","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Login\\login.js":"4","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\history.js":"5","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Header\\header.js":"6","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Footer\\footer.js":"7","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Register\\register.js":"8","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\DocumentValidation\\documentValidation.js":"9","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\FileManager\\fileManager.js":"10","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Card\\card.js":"11","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Document\\document.js":"12","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\Historic\\historic.js":"13","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Profile\\profile.js":"14","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Dropdown\\dropdown.js":"15","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\AddFile\\addFile.js":"16","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\UserManager\\userManager.js":"17","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\UserRegistration\\userRegistration.js":"18","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\auth.js":"19","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\api.js":"20","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\localStorage.js":"21","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\user.js":"22","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\roles.js":"23"},{"size":197,"mtime":1609811468218,"results":"24","hashOfConfig":"25"},{"size":455,"mtime":1609810426630,"results":"26","hashOfConfig":"25"},{"size":2519,"mtime":1610572067579,"results":"27","hashOfConfig":"25"},{"size":1937,"mtime":1610573052970,"results":"28","hashOfConfig":"25"},{"size":117,"mtime":1609804067538,"results":"29","hashOfConfig":"25"},{"size":1940,"mtime":1610835873343,"results":"30","hashOfConfig":"25"},{"size":262,"mtime":1609810195344,"results":"31","hashOfConfig":"25"},{"size":2824,"mtime":1610831583357,"results":"32","hashOfConfig":"25"},{"size":2714,"mtime":1609944978578,"results":"33","hashOfConfig":"25"},{"size":1126,"mtime":1610052669095,"results":"34","hashOfConfig":"25"},{"size":1625,"mtime":1610054302508,"results":"35","hashOfConfig":"25"},{"size":481,"mtime":1609889597957,"results":"36","hashOfConfig":"25"},{"size":1164,"mtime":1609940979621,"results":"37","hashOfConfig":"25"},{"size":3163,"mtime":1610836589076,"results":"38","hashOfConfig":"25"},{"size":1150,"mtime":1610835863991,"results":"39","hashOfConfig":"25"},{"size":2305,"mtime":1610052208160,"results":"40","hashOfConfig":"25"},{"size":2181,"mtime":1610836654551,"results":"41","hashOfConfig":"25"},{"size":3425,"mtime":1610837715631,"results":"42","hashOfConfig":"25"},{"size":902,"mtime":1610837865814,"results":"43","hashOfConfig":"25"},{"size":729,"mtime":1610825873278,"results":"44","hashOfConfig":"25"},{"size":1034,"mtime":1610833611398,"results":"45","hashOfConfig":"25"},{"size":1800,"mtime":1610838142525,"results":"46","hashOfConfig":"25"},{"size":385,"mtime":1610571378236,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ig7b3r",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\index.js",[],["103","104"],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\App.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\routes\\index.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Login\\login.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\history.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Header\\header.js",["105"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, notification } from 'antd';\r\nimport { ArrowRightOutlined, PaperClipOutlined } from '@ant-design/icons';\r\n\r\nimport Dropdown from '../Dropdown/dropdown';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom'\r\nimport history from '../../utils/history';\r\nimport localStorage from '../../services/localStorage';\r\nimport userService from '../../services/user';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = () => {\r\n    const [user, setUser] = useState(null)\r\n    const { pathname } = useLocation();\r\n\r\n    async function getUser(username) {\r\n        const response = await userService.get(username);\r\n        if (response.status === 200) setUser(response.data);\r\n        else {\r\n            notification['error']({\r\n                message: 'Usuário não autorizado',\r\n            });\r\n            localStorage.logout();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getUser()) {\r\n            getUser(localStorage.getUser().username);\r\n        }\r\n        else {\r\n            localStorage.logout();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"header-content padding-page\">\r\n            <Link className=\"brand\" to=\"/\">\r\n                <div className=\"brand\">\r\n                    <PaperClipOutlined />\r\n                    <p>ValiDC</p>\r\n                </div>\r\n            </Link>\r\n            {localStorage.getUser() ?\r\n                <Dropdown email={localStorage.getUser().email} id={localStorage.getUser().username} />\r\n                :\r\n                <div>\r\n                    {pathname !== '/document/validation' &&\r\n                        <Button type=\"link\" onClick={() => { history.push('/document/validation') }}>Validar arquivo <ArrowRightOutlined /></Button>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Footer\\footer.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Register\\register.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\DocumentValidation\\documentValidation.js",["106","107"],"import React, { useState } from 'react';\r\nimport { Form, Input, Button, Upload, message } from 'antd';\r\nimport { PaperClipOutlined } from '@ant-design/icons';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst DocumentValidation = () => {\r\n\r\n    const [defaultFileList, setDefaultFileList] = useState([]);\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const uploadFile = {\r\n        accept: '.png, .jpg, .jpeg, .pdf',\r\n        name: 'file',\r\n        multiple: false,\r\n        beforeUpload: file => {\r\n            let fileList = [file];\r\n            setDefaultFileList(fileList);\r\n            return false;\r\n        },\r\n        onRemove(file) {\r\n            setDefaultFileList([]);\r\n        }\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <div className=\"document-validation-content content-align-center form-container\">\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout={'vertical'}\r\n            >\r\n                <h1>Valide um arquivo</h1>\r\n                <Form.Item\r\n                    label=\"Código\"\r\n                    name=\"code\"\r\n                    rules={[{ required: true, message: 'Por favor digite o código do arquivo' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Arquivo\"\r\n                    name=\"file\"\r\n                    rules={[{ required: true, message: 'Por favor insira um arquivo' }]}\r\n                >\r\n                    <Dragger {...uploadFile} fileList={defaultFileList} disabled={disabled}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <PaperClipOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">Click ou arraste o arquivo para adicioná-lo</p>\r\n                        <p className=\"ant-upload-hint\">\r\n                            Você pode adicionar um arquivo .pdf, .png ou .jpeg\r\n                        </p>\r\n                    </Dragger>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Justificativa da validação\"\r\n                    name=\"justification\"\r\n                    rules={[{ required: true, message: 'Por favor digite ajustificativa da validação' }]}\r\n                >\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Enviar\r\n        </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DocumentValidation;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\FileManager\\fileManager.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Card\\card.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Document\\document.js",["108"],"import React from 'react';\r\n\r\nconst Document = ({file, type}) => {\r\n    return (\r\n        <div className=\"document-container\">\r\n            <div className={`document-file ${type === 'application/pdf' ? 'typePdf' : ''}`} >\r\n                {type === 'application/pdf' ?\r\n                    <embed className=\"file\" src={file} width=\"100%\"></embed> :\r\n                    <img src={file} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Document;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\Historic\\historic.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Profile\\profile.js",["109","110"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button, notification } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport userService from '../../services/user';\r\nimport localStorage from '../../services/localStorage';\r\nimport history from '../../utils/history';\r\n\r\nimport './profile.scss';\r\n\r\nconst Profile = () => {\r\n    const [form] = Form.useForm();\r\n\r\n    const [user, setUser] = useState({});\r\n    const { username } = localStorage.getUser();\r\n\r\n    async function getUser() {\r\n        const response = await userService.get(username);\r\n        console.log(response)\r\n        const { data } = response;\r\n        if (response.status === 200) {\r\n            setUser(data);\r\n            form.setFieldsValue({ name: data.name, username: data.username, email: data.email })\r\n        }\r\n        else {\r\n            notification['error']({\r\n                message: 'Usuário não autorizado',\r\n            });\r\n            localStorage.logout();\r\n        }\r\n    };\r\n\r\n    useEffect(() => { getUser(); }, [])\r\n\r\n    const onFinish = async (values) => {\r\n        const response = await userService.put({\r\n            ...values,\r\n            externalId: user.externalId\r\n        });\r\n        const { data } = response;\r\n        if (response.status === 200) {\r\n            localStorage.update(data.email, data.username);\r\n            notification['success']({\r\n                message: 'Edição realizada com sucesso! Para continuar utilizando nosso sistema, por favor, realize login novamente',\r\n            });\r\n            localStorage.logout();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-container content-align-center form-container\">\r\n            <Form\r\n                form={form}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout={'vertical'}\r\n            >\r\n                <h1>Editar perfil</h1>\r\n                <Form.Item\r\n                    label=\"Nome\"\r\n                    name=\"name\"\r\n                    rules={[{ min: 7, message: 'Por favor digite um nome válido' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Nome de usuário\"\r\n                    name=\"username\"\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Senha\"\r\n                    name=\"password\"\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <div className=\"inline\">\r\n                    <Link to=\"/\">\r\n                        Cancelar\r\n                    </Link>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Salvar\r\n        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Dropdown\\dropdown.js",["111","112"],"import React from 'react';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport localStorage from '../../services/localStorage';\r\n\r\nimport './dropdown.scss';\r\n\r\nconst DropdownComponent = ({ id, email }) => {\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item className=\"menu-info\">\r\n                {email}\r\n            </Menu.Item>\r\n            <Menu.Divider />\r\n            <Menu.Item>\r\n                <Link to=\"/edit/profile\">\r\n                    Editar perfil\r\n                </Link>\r\n            </Menu.Item>\r\n            <Menu.Divider />\r\n            <Menu.Item>\r\n                <a onClick={() => {localStorage.logout()}}>\r\n                    Sair\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <Dropdown overlay={menu}>\r\n            <a className=\"ant-dropdown-link dropdown-link\" onClick={e => e.preventDefault()}>\r\n                <span className=\"dropdown-id\">{id}</span><CaretDownOutlined />\r\n            </a>\r\n        </Dropdown>\r\n    )\r\n};\r\n\r\nexport default DropdownComponent;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\AddFile\\addFile.js",["113","114"],"import React, { useState } from 'react';\r\nimport { Form, Button, Upload, message } from 'antd';\r\nimport { PaperClipOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst AddFile = () => {\r\n    const [defaultFileList, setDefaultFileList] = useState([]);\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const uploadFile = {\r\n        accept: '.png, .jpg, .jpeg, .pdf',\r\n        name: 'file',\r\n        multiple: false,\r\n        beforeUpload: file => {\r\n            let fileList = [file];\r\n            setDefaultFileList(fileList);\r\n            return false;\r\n        },\r\n        onRemove(file) {\r\n            setDefaultFileList([]);\r\n        }\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        console.log(values);\r\n    };\r\n\r\n    return (\r\n        <div className=\"document-content content-align-center form-container\">\r\n            <Form\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout={'vertical'}\r\n            >\r\n                <h1>Enviar arquivo</h1>\r\n\r\n                <Form.Item\r\n                    label=\"Arquivo\"\r\n                    name=\"file\"\r\n                    rules={[{ required: true, message: 'Por favor insira um arquivo' }]}\r\n                >\r\n                    <Dragger {...uploadFile} fileList={defaultFileList} disabled={disabled}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <PaperClipOutlined />\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">Click ou arraste o arquivo para adicioná-lo</p>\r\n                        <p className=\"ant-upload-hint\">\r\n                            Você pode adicionar um arquivo .pdf, .png ou .jpeg\r\n                        </p>\r\n                    </Dragger>\r\n                </Form.Item>\r\n\r\n                <div className=\"inline\">\r\n                    <Link to=\"/home\">\r\n                        Cancelar\r\n                    </Link>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Enviar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFile;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\UserManager\\userManager.js",["115"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Table, Space } from 'antd';\r\nimport { EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport history from '../../../utils/history';\r\n\r\nimport './userManager.scss';\r\nimport user from '../../../services/user';\r\n\r\nconst UserManager = () => {\r\n\r\n    async function fetchData(size, page) {\r\n        const response = await user.list(size, page);\r\n        setData(response.data);\r\n        console.log(response);\r\n    }\r\n\r\n    async function deleteUser(externalId) {\r\n        const response = await user.delete(externalId);\r\n    }\r\n\r\n    useEffect(() => { fetchData(0, 10) }, []);\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nome de usuário',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email'\r\n        },\r\n        {\r\n            key: 'action',\r\n            render: (record) => (\r\n                <Space size=\"middle\">\r\n                    <Button shape=\"circle\" icon={<EditOutlined />} style={{ marginRight: '15px' }} onClick={() => history.push(\r\n                        {\r\n                            pathname: 'admin/user',\r\n                            state: { user: record }\r\n                        })} />\r\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} onClick={() => deleteUser(record.externalId)} />\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className='user-manager-container' >\r\n            <div className=\"page-header padding-page\">\r\n                <h2>Gerenciador de Usuários</h2>\r\n                <Button shape=\"circle\" icon={<PlusOutlined />} onClick={() => history.push('admin/user')} />\r\n            </div>\r\n            <div className=\"table-container padding-page\">\r\n                <Table columns={columns} dataSource={data} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UserManager;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\UserRegistration\\userRegistration.js",["116","117"],"import React, { useEffect, useState } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport history from '../../../utils/history';\r\nimport userService from '../../../services/user';\r\n\r\nconst UserRegistration = () => {\r\n    const [form] = Form.useForm();\r\n\r\n    const [user, setUser] = useState(null);\r\n\r\n    const onFinish = async (values) => {\r\n        const response = await userService.edit({\r\n            ...values,\r\n            externalId: user.externalId\r\n        });\r\n        const { data } = response;\r\n        if (response.status === 200) {\r\n            // localStorage.update(data.email, data.username);\r\n            // notification['success']({\r\n            //     message: 'Edição realizada com sucesso! Para continuar utilizando nosso sistema, por favor, realize login novamente',\r\n            // });\r\n            // localStorage.logout();\r\n        }\r\n    };\r\n\r\n    // async function getUser(username) {\r\n    //     const response = await user.getByUsername(username);\r\n    //     console.log(response)\r\n    //     const { data } = response;\r\n    //     if (response.status === 200) {\r\n    //         form.setFieldsValue({ name: data.name, username: data.username, email: data.email })\r\n    //     }\r\n    //     else {\r\n    //         // notification['error']({\r\n    //         //     message: 'Usuário não autorizado',\r\n    //         // });\r\n    //         // localStorage.logout();\r\n    //     }\r\n    // };\r\n\r\n    useEffect(() => {\r\n        if (history.location.state.user) {\r\n            setUser(history.location.state.user);\r\n            let data = history.location.state.user;\r\n            form.setFieldsValue({ name: data.name, username: data.username, email: data.email })\r\n        };\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"user-registration-container content-align-center form-container\">\r\n            <Form\r\n                form={form}\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout={'vertical'}\r\n            >\r\n                <h1>Resgistro de usuário</h1>\r\n                <Form.Item\r\n                    label=\"Nome\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Por favor o nome' }, { min: 7, message: 'Por favor digite um nome válido' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Nome de usuário\"\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Por favor digite o nome de usuário' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'Por favor digite o email' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <div className=\"inline\">\r\n                    <Link to=\"/admin\">\r\n                        Cancelar\r\n                    </Link>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Enviar\r\n                        </Button>\r\n                    </Form.Item>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserRegistration;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\auth.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\api.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\localStorage.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\user.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\roles.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":16,"column":12,"nodeType":"124","messageId":"125","endLine":16,"endColumn":16},{"ruleId":"122","severity":1,"message":"126","line":2,"column":39,"nodeType":"124","messageId":"125","endLine":2,"endColumn":46},{"ruleId":"122","severity":1,"message":"127","line":10,"column":22,"nodeType":"124","messageId":"125","endLine":10,"endColumn":33},{"ruleId":"128","severity":1,"message":"129","line":9,"column":21,"nodeType":"130","endLine":9,"endColumn":39},{"ruleId":"122","severity":1,"message":"131","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":33,"column":37,"nodeType":"134","endLine":33,"endColumn":39,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":25,"column":17,"nodeType":"130","endLine":25,"endColumn":60},{"ruleId":"136","severity":1,"message":"137","line":34,"column":13,"nodeType":"130","endLine":34,"endColumn":94},{"ruleId":"122","severity":1,"message":"126","line":2,"column":32,"nodeType":"124","messageId":"125","endLine":2,"endColumn":39},{"ruleId":"122","severity":1,"message":"127","line":10,"column":22,"nodeType":"124","messageId":"125","endLine":10,"endColumn":33},{"ruleId":"122","severity":1,"message":"138","line":18,"column":15,"nodeType":"124","messageId":"125","endLine":18,"endColumn":23},{"ruleId":"122","severity":1,"message":"139","line":18,"column":17,"nodeType":"124","messageId":"125","endLine":18,"endColumn":21},{"ruleId":"132","severity":1,"message":"140","line":49,"column":8,"nodeType":"134","endLine":49,"endColumn":10,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'message' is defined but never used.","'setDisabled' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'history' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["144"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'response' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["145"],"no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [getUser]",{"range":"150","text":"151"},"Update the dependencies array to be: [form]",{"range":"152","text":"153"},[1043,1045],"[getUser]",[1771,1773],"[form]"]