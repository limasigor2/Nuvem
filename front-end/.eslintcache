[{"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\index.js":"1","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\App.js":"2","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\history.js":"3","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Footer\\footer.js":"4","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Header\\header.js":"5","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\routes\\index.js":"6","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\localStorage.js":"7","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Dropdown\\dropdown.js":"8","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\user.js":"9","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\roles.js":"10","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Login\\login.js":"11","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\DocumentValidation\\documentValidation.js":"12","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Register\\register.js":"13","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Profile\\profile.js":"14","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\AddFile\\addFile.js":"15","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\FileManager\\fileManager.js":"16","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\List\\list.js":"17","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Edit\\edit.js":"18","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Register\\register.js":"19","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\api.js":"20","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\auth.js":"21","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\validate.js":"22","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\file.js":"23","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Card\\card.js":"24","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\Historic\\historic.js":"25","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Document\\document.js":"26"},{"size":197,"mtime":1611107527499,"results":"27","hashOfConfig":"28"},{"size":455,"mtime":1611107527292,"results":"29","hashOfConfig":"28"},{"size":113,"mtime":1611107527567,"results":"30","hashOfConfig":"28"},{"size":252,"mtime":1611107527397,"results":"31","hashOfConfig":"28"},{"size":1880,"mtime":1611107596806,"results":"32","hashOfConfig":"28"},{"size":2579,"mtime":1611107596854,"results":"33","hashOfConfig":"28"},{"size":998,"mtime":1611107596885,"results":"34","hashOfConfig":"28"},{"size":1110,"mtime":1611107596798,"results":"35","hashOfConfig":"28"},{"size":1738,"mtime":1611107596886,"results":"36","hashOfConfig":"28"},{"size":443,"mtime":1611107596911,"results":"37","hashOfConfig":"28"},{"size":2298,"mtime":1611107596814,"results":"38","hashOfConfig":"28"},{"size":4274,"mtime":1611107596788,"results":"39","hashOfConfig":"28"},{"size":6481,"mtime":1612909292033,"results":"40","hashOfConfig":"28"},{"size":3598,"mtime":1611107596823,"results":"41","hashOfConfig":"28"},{"size":3285,"mtime":1611107596832,"results":"42","hashOfConfig":"28"},{"size":4055,"mtime":1611107596833,"results":"43","hashOfConfig":"28"},{"size":3431,"mtime":1611107596738,"results":"44","hashOfConfig":"28"},{"size":3161,"mtime":1611107596729,"results":"45","hashOfConfig":"28"},{"size":2923,"mtime":1611107596748,"results":"46","hashOfConfig":"28"},{"size":641,"mtime":1611181282949,"results":"47","hashOfConfig":"28"},{"size":875,"mtime":1611176524775,"results":"48","hashOfConfig":"28"},{"size":1119,"mtime":1611107596888,"results":"49","hashOfConfig":"28"},{"size":1473,"mtime":1611107596876,"results":"50","hashOfConfig":"28"},{"size":1781,"mtime":1611107596758,"results":"51","hashOfConfig":"28"},{"size":1296,"mtime":1611107596846,"results":"52","hashOfConfig":"28"},{"size":507,"mtime":1611107596776,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1ig7b3r",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\index.js",[],["117","118"],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\App.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\history.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Footer\\footer.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Header\\header.js",["119"],"import React, { useEffect, useState } from 'react';\nimport { Button, notification } from 'antd';\nimport { ArrowRightOutlined, PaperClipOutlined } from '@ant-design/icons';\n\nimport Dropdown from '../Dropdown/dropdown';\n\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom'\nimport history from '../../utils/history';\nimport localStorage from '../../services/localStorage';\nimport userService from '../../services/user';\n\nimport './header.scss';\n\nconst Header = () => {\n    const [user, setUser] = useState(null)\n    const { pathname } = useLocation();\n\n    async function getUser(username) {\n        const response = await userService.get(username);\n        if (response.status === 200) setUser(response.data);\n        else {\n            notification['error']({\n                message: 'Usuário não autorizado',\n            });\n            localStorage.logout();\n        }\n    };\n\n    useEffect(() => {\n        if (localStorage.getUser()) {\n            getUser(localStorage.getUser().username);\n        }\n        else {\n            localStorage.logout();\n        }\n    }, []);\n\n    return (\n        <div className=\"header-content padding-page\">\n            <Link className=\"brand\" to=\"/\">\n                <div className=\"brand\">\n                    <PaperClipOutlined />\n                    <p>ValiDC</p>\n                </div>\n            </Link>\n            {localStorage.getUser() ?\n                <Dropdown email={localStorage.getUser().email} id={localStorage.getUser().username} />\n                :\n                <div>\n                    {pathname !== '/document/validation' &&\n                        <Button type=\"link\" onClick={() => { history.push('/document/validation') }}>Validar arquivo <ArrowRightOutlined /></Button>\n                    }\n                </div>\n            }\n        </div>\n\n    )\n}\n\nexport default Header;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\routes\\index.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\localStorage.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Dropdown\\dropdown.js",["120","121"],"import React from 'react';\nimport { Dropdown, Menu } from 'antd';\nimport { CaretDownOutlined } from '@ant-design/icons';\n\nimport { Link } from 'react-router-dom';\nimport localStorage from '../../services/localStorage';\n\nimport './dropdown.scss';\n\nconst DropdownComponent = ({ id, email }) => {\n\n    const menu = (\n        <Menu>\n            <Menu.Item className=\"menu-info\">\n                {email}\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item>\n                <Link to=\"/edit/profile\">\n                    Editar perfil\n                </Link>\n            </Menu.Item>\n            <Menu.Divider />\n            <Menu.Item>\n                <a onClick={() => {localStorage.logout()}}>\n                    Sair\n                </a>\n            </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <Dropdown overlay={menu}>\n            <a className=\"ant-dropdown-link dropdown-link\" onClick={e => e.preventDefault()}>\n                <span className=\"dropdown-id\">{id}</span><CaretDownOutlined />\n            </a>\n        </Dropdown>\n    )\n};\n\nexport default DropdownComponent;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\user.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\utils\\roles.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Login\\login.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\DocumentValidation\\documentValidation.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Register\\register.js",["122","123"],"import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nimport './register.scss';\nimport auth from '../../services/auth';\nimport localStorage from '../../services/localStorage';\nimport history from '../../utils/history';\n\nconst Register = () => {\n\n    const [disabled, setDisabled] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (localStorage.getUser()) {\n            history.push('/home');\n        }\n    }, []);\n\n    const onFinish = async (values) => {\n        setDisabled(true);\n        setLoading(true);\n        console.log(values);\n        console.log(values.phones[0].split(/\\(|\\) /));\n\n\n        // const response = await auth.register(values);\n        // if (response.status === 200) {\n        //     notification['success']({\n        //         message: 'Cadastro realizado com sucesso',\n        //     });\n        //     history.push('/');\n        // } else {\n        //     setDisabled(false);\n        //     setLoading(false);\n        //     notification['error']({\n        //         message: response.data.message,\n        //     });\n        // }\n    };\n\n    return (\n        <div className=\"register-container content-align-center form-container\">\n            <Form\n                name=\"basic\"\n                onFinish={onFinish}\n                layout={'vertical'}\n                initialValues={{ phones: [\"\"] }}\n            >\n                <h1>Crie sua conta</h1>\n                <Form.Item\n                    label=\"Nome\"\n                    name=\"name\"\n                    rules={[{ required: true, message: 'Por favor digite seu nome' }, { min: 7, message: 'Por favor digite um nome válido' }]}\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Nome de usuário\"\n                    name=\"id\"\n                    rules={[{ required: true, message: 'Por favor digite seu nome de usuário' }]}\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[{ required: true, message: 'Por favor digite seu email' }, { type: 'email', message: 'Por favor digite um email válido' }]}\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.List\n                    name=\"phones\"\n                    rules={[\n                        {\n                            validator: async (_, phones) => {\n                                if (!phones || phones.length < 1) {\n                                    return Promise.reject(new Error('Por favor, adicione um telefone'));\n                                }\n                            },\n                        },\n                    ]}\n                >\n                    {(fields, { add, remove }, { errors }) => (\n                        <>\n                            {fields.map((field, index) => (\n                                <Form.Item\n                                    label={index === 0 ? \"Telefone(s)\" : \"\"}\n                                    required={true}\n                                    key={field.key}\n                                >\n                                    <Form.Item\n                                        {...field}\n                                        validateTrigger={['onChange', 'onBlur']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                whitespace: true,\n                                                message: \"Por favor, adicione um telefone\",\n                                            },\n                                            {\n                                                pattern: '\\\\([0-9]{2}\\\\) [0-9]{5}-[0-9]{4}',\n                                                message: \"Por favor, adicione um número de telefone teste\",\n                                            }\n\n                                        ]}\n                                        noStyle\n                                    >\n                                        <Input placeholder=\"(85) 99999-9999\" disabled={disabled} />\n                                    </Form.Item>\n                                    {fields.length > 1 ? (\n                                        <MinusCircleOutlined\n                                            className=\"dynamic-delete-button\"\n                                            onClick={() => remove(field.name)}\n                                            disabled={disabled} \n                                        />\n                                    ) : null}\n                                </Form.Item>\n                            ))}\n                            <Form.Item>\n                                <Button\n                                    onClick={() => add()}\n                                    style={{ width: '60%' }}\n                                    icon={<PlusOutlined />}\n                                    disabled={disabled} \n                                >\n                                </Button>\n                                <Form.ErrorList errors={errors} />\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n\n                <Form.Item\n                    label=\"Senha\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Por favor digite sua senha' }]}\n                >\n                    <Input.Password disabled={disabled} />\n                </Form.Item>\n\n                <div className=\"inline\">\n                    <Button type=\"link\" disabled={disabled} onClick={() => history.push(\"/\")} className='no-padding-left'>\n                        Entre na conta\n                    </Button>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled} loading={loading}>\n                            Enviar\n        </Button>\n                    </Form.Item>\n                </div>\n            </Form>\n        </div>\n    )\n}\n\nexport default Register;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Profile\\profile.js",["124"],"import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\n\nimport userService from '../../services/user';\nimport localStorage from '../../services/localStorage';\nimport history from '../../utils/history';\n\nimport './profile.scss';\n\nconst Profile = () => {\n    const [form] = Form.useForm();\n\n    const [disabled, setDisabled] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState({});\n    const { username } = localStorage.getUser();\n\n    async function getUser() {\n        setDisabled(true);\n        const response = await userService.get(username);\n        const { data } = response;\n        if (response.status === 200) {\n            setUser(data);\n            form.setFieldsValue({ name: data.name, username: data.username, email: data.email });\n            setDisabled(false);\n        }\n        else {\n            notification['error']({\n                message: 'Usuário não autorizado',\n            });\n            localStorage.logout();\n        }\n    };\n\n    useEffect(() => { getUser(); }, [])\n\n    const onFinish = async (values) => {\n        setDisabled(true);\n        setLoading(true);\n        const response = await userService.put({\n            ...values,\n            externalId: user.externalId\n        });\n        const { data } = response;\n        if (response.status === 200) {\n            localStorage.update(data.email, data.username);\n            notification['success']({\n                message: 'Edição realizada com sucesso! Para continuar utilizando nosso sistema, por favor, realize login novamente',\n            });\n            localStorage.logout();\n        } else {\n            setDisabled(true);\n            setLoading(true);\n            notification['error']({\n                message: response.data.message,\n            });\n        }\n    };\n\n    return (\n        <div className=\"profile-container content-align-center form-container\">\n            <Form\n                form={form}\n                name=\"basic\"\n                onFinish={onFinish}\n                layout={'vertical'}\n            >\n                <h1>Editar perfil</h1>\n                <Form.Item\n                    label=\"Nome\"\n                    name=\"name\"\n                    rules={[{ min: 7, message: 'Por favor digite um nome válido' }]}\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Nome de usuário\"\n                    name=\"username\"\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Senha\"\n                    name=\"password\"\n                >\n                    <Input.Password disabled={disabled} />\n                </Form.Item>\n\n                <div className=\"inline\">\n                    <Button type=\"link\" disabled={disabled} onClick={() => history.push(\"/\")} className='no-padding-left'>\n                        Cancelar\n                        </Button>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled} loading={loading}>\n                            Salvar\n        </Button>\n                    </Form.Item>\n                </div>\n            </Form>\n        </div>\n    )\n}\n\nexport default Profile;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\AddFile\\addFile.js",["125"],"import React, { useState } from 'react';\nimport { Form, Button, notification, Upload } from 'antd';\nimport { PaperClipOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nimport file from '../../../services/file';\nimport history from '../../../utils/history';\n\nconst { Dragger } = Upload;\n\nconst AddFile = () => {\n    const [defaultFileList, setDefaultFileList] = useState([]);\n    const [disabled, setDisabled] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const uploadFile = {\n        accept: '.png, .jpg, .jpeg, .pdf',\n        name: 'file',\n        multiple: false,\n        beforeUpload: file => {\n            let fileList = [file];\n            setDefaultFileList(fileList);\n            return false;\n        },\n        onRemove(file) {\n            setDefaultFileList([]);\n        }\n    };\n\n    const onFinish = async (values) => {\n        if (defaultFileList.length > 0) {\n            setDisabled(true);\n            setLoading(true);\n            const response = await file.upload(values.file.file);\n            if (response.status === 200) {\n                notification['success']({\n                    message: 'Arquivo enviado com sucesso!',\n                });\n                setDefaultFileList([]);\n                setDisabled(false);\n                setLoading(false);\n            } else {\n                notification['error']({\n                    message: response.data.message,\n                });\n                setDisabled(false);\n                setLoading(false);\n            }\n        } else {\n            notification['error']({\n                message: 'Por favor, adicione um arquivo',\n            });\n        }\n    };\n\n    return (\n        <div className=\"document-content content-align-center form-container\">\n            <Form\n                name=\"basic\"\n                onFinish={onFinish}\n                layout={'vertical'}\n            >\n                <h1>Enviar arquivo</h1>\n\n                <Form.Item\n                    label=\"Arquivo\"\n                    name=\"file\"\n                    rules={[{ required: true, message: 'Por favor insira um arquivo' }]}\n                >\n                    <Dragger {...uploadFile} fileList={defaultFileList} disabled={disabled}>\n                        <p className=\"ant-upload-drag-icon\">\n                            <PaperClipOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">Click ou arraste o arquivo para adicioná-lo</p>\n                        <p className=\"ant-upload-hint\">\n                            Você pode adicionar um arquivo .pdf, .png ou .jpeg\n                        </p>\n                    </Dragger>\n                </Form.Item>\n\n                <div className=\"inline\">\n                    <Button type=\"link\" disabled={disabled} onClick={() => history.goBack()} className='no-padding-left'>\n                        Cancelar\n                    </Button>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled} loading={loading}>\n                            Enviar\n                        </Button>\n                    </Form.Item>\n                </div>\n            </Form>\n        </div>\n    )\n}\n\nexport default AddFile;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\FileManager\\fileManager.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\List\\list.js",["126","127"],"import React, { useState, useEffect } from 'react';\nimport { Button, Modal, notification, Table, Space } from 'antd';\nimport { EditOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport history from '../../../utils/history';\n\nimport './list.scss';\nimport user from '../../../services/user';\n\nconst List = () => {\n    const { confirm } = Modal;\n\n    const [data, setData] = useState(null);\n    const [pagination, setPagination] = useState({\n        page: 0,\n        size: 10,\n    });\n    const [loading, setLoading] = useState(false);\n\n    async function fetchData(page, size) {\n        setLoading(true);\n        const response = await user.list(page, size);\n        if (response.status === 200) {\n            setData(response.data);\n            setLoading(false);\n        } else {\n            setLoading(false);\n            notification['error']({\n                message: response.data.message,\n            });\n        }\n    }\n\n    useEffect(() => { fetchData(pagination.page, pagination.size) }, []);\n\n    const handleTableChange = (pagination, filters, sorter) => {\n    };\n\n    const columns = [\n        {\n            title: 'Nome de usuário',\n            dataIndex: 'username',\n            key: 'username',\n        },\n        {\n            title: 'Nome',\n            dataIndex: 'name',\n            key: 'name'\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email'\n        },\n        {\n            key: 'action',\n            render: (record) => (\n                <Space size=\"middle\">\n                    <Button shape=\"circle\" icon={<EditOutlined />} style={{ marginRight: '15px' }} onClick={() => history.push(\n                        {\n                            pathname: 'admin/user/edit',\n                            state: { user: record }\n                        })} />\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} onClick={() => showConfirm(record.externalId)} />\n                </Space>\n            ),\n        },\n    ];\n\n    function showConfirm(externalId) {\n        confirm({\n            title: 'Você deseja deletar esse usuário?',\n            content: 'Deletando, você concorda que todas os dados do mesmo serão removidos',\n            async onOk() {\n                const response = await user.delete(externalId);\n                if (response.status === 200) {\n                    fetchData(pagination.page, pagination.size);\n                    notification['success']({\n                        message: 'Usuário deletado com sucesso',\n                    });\n                } else {\n                    notification['error']({\n                        message: response.data.message,\n                    });\n                }\n            },\n            okText: \"Deletar\",\n            cancelText: \"Cancelar\",\n        });\n    }\n\n    return (\n        <div className='user-manager-container' >\n            <div className=\"page-header padding-page\">\n                <h2>Gerenciador de Usuários</h2>\n                <Button shape=\"circle\" icon={<PlusOutlined />} onClick={() => history.push('/admin/user/register')} />\n            </div>\n            <div className=\"table-container padding-page\">\n                <Table columns={columns} dataSource={data} loading={loading} pagination={pagination}\n                    onChange={handleTableChange} />\n            </div>\n        </div>\n    )\n};\n\nexport default List;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Edit\\edit.js",["128","129"],"import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, notification} from 'antd';\n\nimport history from '../../../utils/history';\nimport userService from '../../../services/user';\n\nconst Edit = () => {\n    const [form] = Form.useForm();\n\n    const [user, setUser] = useState(null);\n    const [disabled, setDisabled] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const onFinish = async (values) => {\n        setDisabled(true);\n        setLoading(true);\n        const response = await userService.edit({\n            ...values,\n            externalId: user.externalId\n        });\n        const { data } = response;\n        if (response.status === 200) {\n            notification['success']({\n                message: 'Edição realizada com sucesso!',\n            });\n            history.push(\"/admin\");\n        } else {\n            setDisabled(false);\n            setLoading(false);\n            notification['error']({\n                message: response.data.message,\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (history.location.state.user) {\n            setUser(history.location.state.user);\n            let data = history.location.state.user;\n            form.setFieldsValue({ name: data.name, username: data.username, email: data.email })\n        } else {\n            history.push(\"/admin\");\n        };\n    }, [])\n\n    return (\n        <div className=\"user-registration-container content-align-center form-container\">\n            <Form\n                form={form}\n                name=\"basic\"\n                onFinish={onFinish}\n                layout={'vertical'}\n            >\n                <h1>Editar usuário</h1>\n                <Form.Item\n                    label=\"Nome\"\n                    name=\"name\"\n                    rules={[{ required: true, message: 'Por favor o nome' }, { min: 7, message: 'Por favor digite um nome válido' }]}\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Nome de usuário\"\n                    name=\"username\"\n                    rules={[{ required: true, message: 'Por favor digite o nome de usuário' }]}\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    rules={[{ required: true, message: 'Por favor digite o email' }]}\n                >\n                    <Input disabled={disabled} />\n                </Form.Item>\n                <div className=\"inline\">\n                    <Button type=\"link\" disabled={disabled} onClick={() => history.push(\"/admin\")} className='no-padding-left'>\n                        Cancelar\n                    </Button>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" disabled={disabled} loading={loading}>\n                            Enviar\n                        </Button>\n                    </Form.Item>\n                </div>\n            </Form>\n        </div>\n    )\n}\n\nexport default Edit;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Admin\\Register\\register.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\api.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\auth.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\validate.js",["130"],"import { getSuggestedQuery } from '@testing-library/react';\nimport api from './api';\n\nconst validate = {\n    async post(file, user, name, justification) {\n        let formData = new FormData();\n        formData.append('file', file);\n        formData.append('motivo', justification);\n        formData.append('username', user);\n        formData.append('filename', name);\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            };\n\n            const response = await api.post('/validate/', formData, config);\n            return response;\n        } catch (responseError) {\n            const { response } = responseError;\n            return response;\n        }\n    },\n\n    async get(userName, fileName) {\n        try {\n            const response = await api.get(\"/validate/list\", { params: { username: userName, filename: fileName }});\n            return response;\n        } catch (responseError) {\n            const { response } = responseError;\n            return response;\n        }\n    }\n}\n\nexport default validate;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\services\\file.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Card\\card.js",["131"],"import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nimport Document from '../Document/document';\n\nimport './card.scss';\n\nconst Card = ({ name, remove, get, historic, edit }) => {\n\n    const [file, setFile] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [type, setType] = useState('');\n    const [showDocument, setShowDocument] = useState(false);\n\n    async function document() {\n        setLoading(true);\n        const file = await get();\n        setType(file.type);\n        let fileURL = URL.createObjectURL(file);\n        setFile(fileURL);\n        if (file) {\n            setLoading(false);\n            setShowDocument(true);\n        }\n    }\n\n    return (\n        <div className=\"card-container\">\n            <div className=\"card-header style-header-and-footer\">\n                <h3>{name}</h3>\n                <div className=\"file-actions\">\n                    {/* <Button shape=\"circle\" icon={<EditOutlined />} style={{ marginRight: '15px' }} onClick={() => edit()} /> */}\n                    <Button shape=\"circle\" icon={<DeleteOutlined />} onClick={() => remove()} />\n                </div>\n            </div>\n            {showDocument && <div className=\"file\"><Document file={file} type={type} /></div>}\n            <div className=\"card-footer style-header-and-footer\">\n                <Button onClick={() => showDocument ? setShowDocument(false) : document()} loading={loading}>\n                    {showDocument ? 'Ocultar Arquivo' : 'Abrir Arquivo'}\n                </Button>\n                <Button onClick={() => historic()}>\n                    Ver histórico\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\User\\Historic\\historic.js",[],"C:\\Users\\BNeves\\Desktop\\Nuvem\\front-end\\src\\components\\Document\\document.js",["132"],"import React from 'react';\nimport './document.scss';\n\nconst Document = ({file, type}) => {\n    return (\n        <div className=\"document-container\">\n            <div className={`document-file ${type === 'application/pdf' ? 'typePdf' : ''}`} >\n                {type === 'application/pdf' ?\n                    <embed className=\"file\" src={file} width=\"100%\"></embed> :\n                    <img src={file} className=\"img\"/>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Document;",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":16,"column":12,"nodeType":"139","messageId":"140","endLine":16,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":25,"column":17,"nodeType":"143","endLine":25,"endColumn":60},{"ruleId":"141","severity":1,"message":"142","line":34,"column":13,"nodeType":"143","endLine":34,"endColumn":94},{"ruleId":"137","severity":1,"message":"144","line":2,"column":31,"nodeType":"139","messageId":"140","endLine":2,"endColumn":43},{"ruleId":"137","severity":1,"message":"145","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":12},{"ruleId":"146","severity":1,"message":"147","line":35,"column":37,"nodeType":"148","endLine":35,"endColumn":39,"suggestions":"149"},{"ruleId":"137","severity":1,"message":"150","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":14},{"ruleId":"137","severity":1,"message":"151","line":13,"column":24,"nodeType":"139","messageId":"140","endLine":13,"endColumn":37},{"ruleId":"146","severity":1,"message":"152","line":33,"column":70,"nodeType":"148","endLine":33,"endColumn":72,"suggestions":"153"},{"ruleId":"137","severity":1,"message":"154","line":21,"column":17,"nodeType":"139","messageId":"140","endLine":21,"endColumn":21},{"ruleId":"146","severity":1,"message":"155","line":44,"column":8,"nodeType":"148","endLine":44,"endColumn":10,"suggestions":"156"},{"ruleId":"137","severity":1,"message":"157","line":1,"column":10,"nodeType":"139","messageId":"140","endLine":1,"endColumn":27},{"ruleId":"137","severity":1,"message":"158","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":10,"column":21,"nodeType":"143","endLine":10,"endColumn":54},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'notification' is defined but never used.","'auth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'Link' is defined but never used.","'setPagination' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pagination.page' and 'pagination.size'. Either include them or remove the dependency array.",["164"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["165"],"'getSuggestedQuery' is defined but never used.","'EditOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [getUser]",{"range":"172","text":"173"},"Update the dependencies array to be: [pagination.page, pagination.size]",{"range":"174","text":"175"},"Update the dependencies array to be: [form]",{"range":"176","text":"177"},[1104,1106],"[getUser]",[1017,1019],"[pagination.page, pagination.size]",[1387,1389],"[form]"]